source('C:/Users/daenu/switchdrive/Research/TrendInflation/submissions/JAE/HistoricalInflation_Replication/1_SimulatePlim.R')
settTest <- list(alpha = 1, beta = -1, "sig" = 6, "rho0" = 0, "rho1" = 1, "c" = 0, "s2n" = 6, "N" = N, dep = FALSE)
BiasTest = simBias(settTest)
# ------------------------------------------------------------------------
# Do the figures
# ------------------------------------------------------------------------
# Plim Alpha+Beta independent
data.df = data.frame(sett1$s2n, Bias1[, 3], Bias2[, 3], Bias3[, 3], Bias4[, 3])
colnames(data.df) <- c("s2n", "Baseline", "Larger threshold", "Larger intercept", "Larger slope")
melted.df = melt(data.df, id.vars="s2n")
g <- ggplot(data=melted.df, aes(x=s2n, y=value, colour=variable, linetype = variable, shape = factor(variable))) +geom_line(size = 0.8)
g <- g + scale_color_manual(values=c("black", "blue", "magenta", "indianred3", "lightgoldenrod3", "gray60"))
g <- g + scale_linetype_manual(values = c("dotted", "longdash", "dotdash", "1F"))
g <- g + geom_hline(yintercept=c(sett1$alpha+sett1$beta), linetype="solid", colour = "black", size = 0.8)
g <- g + ggtitle("") + ylab(bquote(paste("Probability limit ", alpha[ols]+beta[ols], "", sep =""))) + xlab(bquote(paste("Signal-to-noise ratio (", sigma[pi]^2/sigma[omega]^2, ")", sep ="")))
g <- g + theme(axis.line = element_line(colour = "black"))+ theme(panel.background = element_blank())+theme(panel.border = element_rect(linetype = "solid", colour = "black", fill = NA))
g <- g + scale_x_continuous(limits = c(0, 6), expand = c(0, 0))+scale_y_continuous(limits = c(-0.1, 0.5), expand = c(0, 0))
g <- g +  theme(legend.justification=c(1,0), legend.position=c(.95,.6))+theme(legend.title=element_blank())+ theme(legend.key = element_rect(fill = "white"))
g <- g  + theme(axis.text.x = element_text(colour = "black"), axis.text.y = element_text(colour = "black"))
g <- g + theme(text = element_text(family = "Palatino"))
g
ggsave("./Results/Fig_C1a.pdf", width = 11, height = 10, units="cm")
# Plim Alpha+Beta correlated
data.df = data.frame(sett1$s2n, Bias1[, 3], Bias5[, 3])
colnames(data.df) <- c("s2n", "Baseline",  "Correlated measurement error")
melted.df = melt(data.df, id.vars="s2n")
g <- ggplot(data=melted.df, aes(x=s2n, y=value, colour=variable, linetype = variable, shape = factor(variable))) +geom_line(size = 0.8)
g <- g + scale_color_manual(values=c("black", "blue", "magenta", "indianred3", "lightgoldenrod3", "gray60"))
g <- g + scale_linetype_manual(values = c("dotted", "longdash", "dotdash", "1F"))
g <- g + geom_hline(yintercept=c(sett1$alpha+sett1$beta), linetype="solid", colour = "black", size = 0.8)
g <- g + ggtitle("") + ylab(bquote(paste("Probability limit ", alpha[ols]+beta[ols], "", sep =""))) + xlab(bquote(paste("Signal-to-noise ratio (", sigma[pi]^2/sigma[omega]^2, ")", sep ="")))
g <- g + theme(axis.line = element_line(colour = "black"))+ theme(panel.background = element_blank())+theme(panel.border = element_rect(linetype = "solid", colour = "black", fill = NA))
g <- g + scale_x_continuous(limits = c(0, 6), expand = c(0, 0))+scale_y_continuous(limits = c(-1, 6), expand = c(0, 0))
g <- g +  theme(legend.justification=c(1,0), legend.position=c(.95,.55))+theme(legend.title=element_blank())+ theme(legend.key = element_rect(fill = "white"))
g <- g  + theme(axis.text.x = element_text(colour = "black"), axis.text.y = element_text(colour = "black"))
g <- g + theme(text = element_text(family = "Palatino"))
g
ggsave("./Results/Fig_C1b.pdf", width = 11, height = 10, units="cm")
# Plim Beta independent
data.df = data.frame(sett1$s2n, Bias1[, 2], Bias2[, 2], Bias3[, 2], Bias4[, 2])
colnames(data.df) <- c("s2n", "Baseline", "Larger threshold", "Larger intercept", "Larger slope")
melted.df = melt(data.df, id.vars="s2n")
g <- ggplot(data=melted.df, aes(x=s2n, y=value, colour=variable, linetype = variable, shape = factor(variable))) +geom_line(size = 0.8)
g <- g + scale_color_manual(values=c("black", "blue", "magenta", "indianred3", "lightgoldenrod3", "gray60"))
g <- g + scale_linetype_manual(values = c("dotted", "longdash", "dotdash", "1F"))
g <- g + geom_hline(yintercept=c(sett1$beta), linetype="solid", colour = "black", size = 0.8)
g <- g + ggtitle("") + ylab(bquote(paste("Probability limit ", beta[ols], "", sep =""))) + xlab(bquote(paste("Signal-to-noise ratio (", sigma[pi]^2/sigma[omega]^2, ")", sep ="")))
g <- g + theme(axis.line = element_line(colour = "black"))+ theme(panel.background = element_blank())+theme(panel.border = element_rect(linetype = "solid", colour = "black", fill = NA))
g <- g + scale_x_continuous(limits = c(0, 6), expand = c(0, 0))+scale_y_continuous(limits = c(-1.1, 0), expand = c(0, 0))
g <- g +  theme(legend.justification=c(1,0), legend.position=c(.95,.6))+theme(legend.title=element_blank())+ theme(legend.key = element_rect(fill = "white"))
g <- g  + theme(axis.text.x = element_text(colour = "black"), axis.text.y = element_text(colour = "black"))
g <- g + theme(text = element_text(family = "Palatino"))
g
ggsave("./Results/Fig_1b.pdf", width = 11, height = 10, units="cm")
# Plim Beta correlated
data.df = data.frame(sett1$s2n, Bias1[, 2], Bias5[, 2])
colnames(data.df) <- c("s2n", "Baseline",  "Correlated measurement error")
melted.df = melt(data.df, id.vars="s2n")
g <- ggplot(data=melted.df, aes(x=s2n, y=value, colour=variable, linetype = variable, shape = factor(variable))) +geom_line(size = 0.8)
g <- g + scale_color_manual(values=c("black", "blue", "magenta", "indianred3", "lightgoldenrod3", "gray60"))
g <- g + scale_linetype_manual(values = c("dotted", "longdash", "dotdash", "1F"))
g <- g + geom_hline(yintercept=c(sett1$beta), linetype="solid", colour = "black", size = 0.8)
g <- g + ggtitle("") + ylab(bquote(paste("Probability limit ", beta[ols], "", sep =""))) + xlab(bquote(paste("Signal-to-noise ratio (", sigma[pi]^2/sigma[omega]^2, ")", sep ="")))
g <- g + theme(axis.line = element_line(colour = "black"))+ theme(panel.background = element_blank())+theme(panel.border = element_rect(linetype = "solid", colour = "black", fill = NA))
g <- g + scale_x_continuous(limits = c(0, 6), expand = c(0, 0))+scale_y_continuous(limits = c(-2, 10), expand = c(0, 0))
g <- g +  theme(legend.justification=c(1,0), legend.position=c(.95,.55))+theme(legend.title=element_blank())+ theme(legend.key = element_rect(fill = "white"))
g <- g  + theme(axis.text.x = element_text(colour = "black"), axis.text.y = element_text(colour = "black"))
g <- g + theme(text = element_text(family = "Palatino"))
g
ggsave("./Results/Fig_1d.pdf", width = 11, height = 10, units="cm")
# Plim Alpha independent
data.df = data.frame(sett1$s2n, Bias1[, 1], Bias2[, 1], Bias3[, 1], Bias4[, 1])
colnames(data.df) <- c("s2n", "Baseline", "Larger threshold", "Larger intercept", "Larger slope")
melted.df = melt(data.df, id.vars="s2n")
g <- ggplot(data=melted.df, aes(x=s2n, y=value, colour=variable, linetype = variable, shape = factor(variable))) +geom_line(size = 0.8)
g <- g + scale_color_manual(values=c("black", "blue", "magenta", "indianred3", "lightgoldenrod3", "gray60"))
g <- g + scale_linetype_manual(values = c("dotted", "longdash", "dotdash", "1F"))
g <- g + geom_hline(yintercept=c(sett1$alpha), linetype="solid", colour = "black", size = 0.8)
g <- g + ggtitle("") + ylab(bquote(paste("Probability limit ", alpha[ols], "", sep =""))) + xlab(bquote(paste("Signal-to-noise ratio (", sigma[pi]^2/sigma[omega]^2, ")", sep ="")))
g <- g + theme(axis.line = element_line(colour = "black"))+ theme(panel.background = element_blank())+theme(panel.border = element_rect(linetype = "solid", colour = "black", fill = NA))
g <- g + scale_x_continuous(limits = c(0, 6), expand = c(0, 0))+scale_y_continuous(limits = c(0, 1.1), expand = c(0, 0))
g <- g +  theme(legend.justification=c(1,0), legend.position=c(.95,.05))+theme(legend.title=element_blank())+ theme(legend.key = element_rect(fill = "white"))
g <- g  + theme(axis.text.x = element_text(colour = "black"), axis.text.y = element_text(colour = "black"))
g <- g + theme(text = element_text(family = "Palatino"))
g
ggsave("./Results/Fig_1a.pdf", width = 11, height = 10, units="cm")
# Plim Alpha correlated
data.df = data.frame(sett1$s2n, Bias1[, 1], Bias5[, 1])
colnames(data.df) <- c("s2n", "Baseline",  "Correlated measurement error")
melted.df = melt(data.df, id.vars="s2n")
g <- ggplot(data=melted.df, aes(x=s2n, y=value, colour=variable, linetype = variable, shape = factor(variable))) +geom_line(size = 0.8)
g <- g + scale_color_manual(values=c("black", "blue", "magenta", "indianred3", "lightgoldenrod3", "gray60"))
g <- g + scale_linetype_manual(values = c("dotted", "longdash", "dotdash", "1F"))
g <- g + geom_hline(yintercept=c(sett1$alpha), linetype="solid", colour = "black", size = 0.8)
g <- g + ggtitle("") + ylab(bquote(paste("Probability limit ", alpha[ols], "", sep =""))) + xlab(bquote(paste("Signal-to-noise ratio (", sigma[pi]^2/sigma[omega]^2, ")", sep ="")))
g <- g + theme(axis.line = element_line(colour = "black"))+ theme(panel.background = element_blank())+theme(panel.border = element_rect(linetype = "solid", colour = "black", fill = NA))
g <- g + scale_x_continuous(limits = c(0, 6), expand = c(0, 0))+scale_y_continuous(limits = c(-5, 2), expand = c(0, 0))
g <- g +  theme(legend.justification=c(1,0), legend.position=c(.95,.25))+theme(legend.title=element_blank())+ theme(legend.key = element_rect(fill = "white"))
g <- g  + theme(axis.text.x = element_text(colour = "black"), axis.text.y = element_text(colour = "black"))
g <- g + theme(text = element_text(family = "Palatino"))
g
ggsave("./Results/Fig_1c.pdf", width = 11, height = 10, units="cm")
source('C:/Users/daenu/switchdrive/Research/TrendInflation/submissions/JAE/HistoricalInflation_Replication/1_SimulatePlim.R')
# Data for proxy (historical: Warren and Pearson linked with Hanes replication)
DataHist = read.csv("./Data/RawDataProxy.xlsx", startRow = 1)
# Data for proxy (historical: Warren and Pearson linked with Hanes replication)
DataHist = read.csv("./Data/RawDataProxy.xlsx")
# Data for proxy (historical: Warren and Pearson linked with Hanes replication)
DataHist = read.csv("./Data/RawDataProxy.csv")
DataHist
Date <- as.Date(paste(as.character(DataHist[,1]), "-01-01", sep = ""))
Date
ppiAllh <- xts(DataHist[, 2], order.by = Date)
library(xts)
# Data for proxy (historical: Warren and Pearson linked with Hanes replication)
DataHist = read.csv("./Data/RawDataProxy.csv")
Date <- as.Date(paste(as.character(DataHist[,1]), "-01-01", sep = ""))
ppiAllh <- xts(DataHist[, 2], order.by = Date)
ppiAllh
plot(ppiAllh)
# Data for proxy (historical: Warren and Pearson linked with Hanes replication)
DataHist = read.csv("./Data/CompositeCPIMeasuringWorth.csv")
Date <- as.Date(paste(as.character(DataHist[,1]), "-01-01", sep = ""))
cpiAllh <- xts(DataHist[, 2], order.by = Date)
cpiAllh
plot(cpiAllh)
source('C:/Users/daenu/switchdrive/Research/TrendInflation/submissions/JAE/HistoricalInflation_Replication/2_RomerizeBLSData.R')
source('C:/Users/daenu/switchdrive/Research/TrendInflation/submissions/JAE/HistoricalInflation_Replication/2_RomerizeBLSData.R')
# ------------------------------------------------------------------------
# 6) Descriptive statistics used in text
# ------------------------------------------------------------------------
# Descriptive statistics for comparison in text
mean(CPIa["1800-01-01/1900-01-01",], na.rm=TRUE)
sd(CPIa["1800-01-01/1900-01-01",], na.rm=TRUE)
mean(PROXa["1800-01-01/1900-01-01",], na.rm=TRUE)
sd(PROXa["1800-01-01/1900-01-01",], na.rm=TRUE)
cor(CPIa["1800-01-01/1900-01-01",], PROXa["1800-01-01/1900-01-01",], use = "pairwise.complete.obs")
def_proxy <- PROXa["1800-01-01/1900-01-01",]<0
def_cpi <- CPIa["1800-01-01/1900-01-01",]<0
inf_proxy <- PROXa["1800-01-01/1900-01-01",]>=0
inf_cpi <- PROXa["1800-01-01/1900-01-01",]>=0
mean(def_proxy != def_cpi, na.rm = TRUE)
source('C:/Users/daenu/switchdrive/Research/TrendInflation/submissions/JAE/HistoricalInflation_Replication/2_RomerizeBLSData.R')
# ------------------------------------------------------------------------
# 6) Descriptive statistics used in text
# ------------------------------------------------------------------------
# Descriptive statistics for comparison in text
mean(CPIa["1800-01-01/1900-01-01",], na.rm=TRUE)
sd(CPIa["1800-01-01/1900-01-01",], na.rm=TRUE)
mean(PROXa["1800-01-01/1900-01-01",], na.rm=TRUE)
sd(PROXa["1800-01-01/1900-01-01",], na.rm=TRUE)
cor(CPIa["1800-01-01/1900-01-01",], PROXa["1800-01-01/1900-01-01",], use = "pairwise.complete.obs")
def_proxy <- PROXa["1800-01-01/1900-01-01",]<0
def_cpi <- CPIa["1800-01-01/1900-01-01",]<0
source('C:/Users/daenu/switchdrive/Research/TrendInflation/submissions/JAE/HistoricalInflation_Replication/2_RomerizeBLSData.R')
mean(def_proxy != def_cpi, na.rm = TRUE)
# ------------------------------------------------------------------------
# 6) Compute misclassification rates from 1950-2017
# ------------------------------------------------------------------------
# x is the CPI deflation indicator, z the proxy deflation indicator, d the true deflation indicator
# Using modern weights
CPIa <- ts_pcy(ts_frequency(CPI, to="year", aggregate = "mean"))
PROXa <- ts_pcy(ts_frequency(proxyw21, to="year", aggregate = "mean"))
REPa <- ts_pcy(ts_frequency(CPIw21, to="year", aggregate = "mean"))
d <- (ts_span(CPIa, "1960-01-01", "2017-01-01") < 0)
x <- (ts_span(REPa, "1960-01-01", "2017-01-01") < 0)
z <- (ts_span(PROXa, "1960-01-01", "2017-01-01") < 0)
Px0d1 <- mean(x[d==1]==0)
Px1d0 <- mean(x[d==0]==1)
Pz0d1 <- mean(z[d==1]==0)
Pz1d0 <- mean(z[d==0]==1)
Pxz0d1 <- mean(z[d==1]==0 & x[d==1]==0)
Pxz1d0 <- mean(z[d==0]==1 & x[d==0]==1)
Table <- as.matrix(cbind(Px0d1, Px1d0, Pz0d1, Pz1d0, Px0d1*Pz0d1,  Px1d0*Pz1d0, Pxz0d1, Pxz1d0))
Table
# Demeaned data
mCPIa <- mean(CPIa, na.rm = TRUE)
CPIa <- CPIa
PROXa <- PROXa
REPa <- REPa
d <- (ts_span(CPIa, "1960-01-01", "2017-01-01") < mCPIa)
x <- (ts_span(REPa, "1960-01-01", "2017-01-01") < mCPIa)
z <- (ts_span(PROXa, "1960-01-01", "2017-01-01") < mCPIa)
Px0d1 <- mean(x[d==1]==0)
Px1d0 <- mean(x[d==0]==1)
Pz0d1 <- mean(z[d==1]==0)
Pz1d0 <- mean(z[d==0]==1)
Pxz0d1 <- mean(z[d==1]==0 & x[d==1]==0)
Pxz1d0 <- mean(z[d==0]==1 & x[d==0]==1)
Table <- rbind(Table, as.matrix(cbind(Px0d1, Px1d0, Pz0d1, Pz1d0, Px0d1*Pz0d1,  Px1d0*Pz1d0, Pxz0d1, Pxz1d0)))
Table
# Print the table
colnames(Table) <- c("$x=0|d=1$","$x=1|d=0$", "$z=0|d=1$","$z=1|d=0$", "prod|d=0", "prod|d=1" , "$x=z=0|d=1$","$x=z=1|d=0$")
rownames(Table) <- c("1960-2017 zero threshold", "1960-2017 higher threshold", "1980-2017 higher threshold", "1960-2017 few obs.")
rownames(Table) <- c("1960-2017 zero threshold", "1960-2017 higher threshold")
xTable <- xtable(Table, digits = 2, caption = "Misclassification rates", label = "tab:Misclassification")
align(xTable) <- c("l", "c", "c", "c", "c", "c", "c", "c", "c")
print(xTable,sanitize.text.function=function(x){x}, caption.placement = "top",booktabs = T)
# Compute the attenuation factor using demeaned data
CPIa <- ts_pcy(ts_frequency(CPI, to="year", aggregate = "mean"))
PROXa <- ts_pcy(ts_frequency(proxyw21, to="year", aggregate = "mean"))
REPa <- ts_pcy(ts_frequency(CPIw21, to="year", aggregate = "mean"))
mCPIa <- mean(CPIa, na.rm = TRUE)
PROXa <- PROXa
REPa <- REPa
d <- (ts_span(CPIa, "1960-01-01", "2017-01-01") < mCPIa)
x <- (ts_span(REPa, "1960-01-01", "2017-01-01") < mCPIa)
z <- (ts_span(PROXa, "1960-01-01", "2017-01-01") < mCPIa)
Pd1x0 <- mean(d[x==0]==1)
Pd0x1 <- mean(d[x==1]==0)
Biasx <- 1-Pd1x0-Pd0x1
Pd1z0 <- mean(d[z==0]==1)
Pd0z1 <- mean(d[z==1]==0)
Biasz <- 1-Pd1z0-Pd0z1
print("Bias")
print(Biasx)
print(Biasz)
# ------------------------------------------------------------------------
# 7) Compute correlation and autocorrelation of measurement error (Table B5)
# ------------------------------------------------------------------------
# Table with descriptive statistics
# The following is only used for calibratig the simulation exercise to test the codes
GDPD <- ts_fred('GDPDEF')
GDPD <- ts_pcy(ts_frequency(GDPD, to="year", aggregate = "mean"))
GDPD <- ts_xts(GDPD)
GDPD <- ts_span(GDPD, "1960-01-01", "2017-01-01")
NGDP <- ts_fred('GDPA')
NGDP <- ts_pcy(ts_frequency(NGDP, to="year", aggregate = "mean"))
NGDP <- ts_xts(NGDP)
NGDP <- ts_span(NGDP, "1960-01-01", "2017-01-01")
RGDP <- ts_fred('GDPCA')
RGDP <- ts_pcy(ts_frequency(RGDP, to="year", aggregate = "mean"))
RGDP <- ts_xts(RGDP)
RGDP <- ts_span(RGDP, "1960-01-01", "2017-01-01")
CPIa <- ts_pcy(ts_frequency(CPI, to="year", aggregate = "mean"))
PROXa <- ts_pcy(ts_frequency(proxyw21, to="year", aggregate = "mean"))
REPa <- ts_pcy(ts_frequency(CPIw21, to="year", aggregate = "mean"))
errx <- CPIa - REPa
errz <- CPIa - PROXa
errg <- GDPD - PROXa
#ErrorDesc <- ts_c(NGDP, RGDP, CPIa, GDPD, PROXa, REPa, errx, errz, errg)
#colnames(ErrorDesc) <- c("Nominal GDP", "Real GDP", "CPI", "Deflator", "Proxy", "Replication", "CPI-replication", "CPI-proxy", "Deflator-proxy")
ErrorDesc <- ts_c(CPIa, PROXa, REPa, errx, errz)
#ErrorDesc <- ts_c(NGDP, RGDP, CPIa, GDPD, PROXa, REPa, errx, errz, errg)
#colnames(ErrorDesc) <- c("Nominal GDP", "Real GDP", "CPI", "Deflator", "Proxy", "Replication", "CPI-replication", "CPI-proxy", "Deflator-proxy")
ErrorDesc <- ts_c(CPIa, PROXa, REPa, errx, errz)
colnames(ErrorDesc) <- c("CPI", "Proxy", "Replication", "CPI-replication", "CPI-proxy")
ErrorDesc <- ts_span(ErrorDesc, "1960-01-01")
stargazer(as.data.frame(ErrorDesc), summary.stat = c("mean", "sd", "min", "max"), digits =2)
# Table with regressions
myData <- data.frame(REPa, PROXa, GDPD, errx, lag(errx), errz, lag(errz),errg, lag(errg), CPIa)
colnames(myData) <- c("replica", "proxy", "gdpd", "errx", "l.errx", "errz", "l.errz", "errg", "l.errg", "CPI")
CPIx <- lm(replica ~ CPI, data = myData)
CPIx.se <- sqrt(diag(NeweyWest(CPIx)))
CPIz <- lm(proxy ~ CPI, data = myData)
CPIz.se <- sqrt(diag(NeweyWest(CPIz)))
CPIg <- lm(proxy ~ gdpd, data = myData)
CPIg.se <- sqrt(diag(NeweyWest(CPIg)))
corxz <- lm(errx ~ errz+l.errz+l.errx, data = myData)
corxz.se <- sqrt(diag(NeweyWest(corxz)))
corzx <- lm(errz ~ errx+l.errx+l.errz, data = myData)
corzx.se <- sqrt(diag(NeweyWest(corzx)))
corgx <- lm(errg ~ errx+l.errx+l.errg, data = myData)
corgx.se <- sqrt(diag(NeweyWest(corgx)))
stargazer(CPIx, CPIz, corxz, corzx, title="Properties of replication and measurement errors", type = "latex",
se=list(CPIx.se, CPIz.se, corxz.se, corzx.se),
dep.var.labels = c("Replication", "Proxy", "CPI-replication", "CPI-proxy"),
covariate.labels = c("CPI", "CPI-proxy", "CPI-replication",  "CPI-proxy (t-1)", "CPI-replication (t-1)", "Constant"),
omit.stat = c("f", "ll", "sigma2", "ser", "adj.rsq"), label="tab:measerr",
table.layout ="-d-t-s-n",
model.numbers          = FALSE,
font.size = "small",
digits =2,
notes        = "", style = "qje")
source('C:/Users/daenu/switchdrive/Research/TrendInflation/submissions/JAE/HistoricalInflation_Replication/2_RomerizeBLSData.R')
source('C:/Users/daenu/switchdrive/Research/TrendInflation/submissions/JAE/HistoricalInflation_Replication/2_RomerizeBLSData.R')
data.df <- data.frame(Date, ts_c(RGDP, RGDPPROXY, RGDPCPI))
colnames(data.df) <- c("date", "Real GDP", "NGPD/proxy", "NGDP/CPI")
melted.df = melt(data.df, id.vars="date")
g <- ggplot(data=melted.df, aes(x=date, y=value, colour=variable, linetype = variable, shape = factor(variable))) + geom_line()
g <- g + scale_color_manual(values=c("blue", "red", "black", "blue", "magenta", "indianred3", "lightgoldenrod3", "gray60"))
g <- g + scale_linetype_manual(values = c( "solid", "longdash","twodash", "dotted", "dotdash"))
g <- g + ggtitle("") + ylab("In %") + xlab("")
g <- g + theme(axis.line = element_line(colour = "black"))+ theme(panel.background = element_blank())+theme(panel.border = element_rect(linetype = "solid", colour = "black", fill = NA))
g <- g + scale_x_date(limits = c(as.Date("1800-01-01"), as.Date("1899-01-01")), expand = c(0, 0))
g <- g + coord_cartesian(ylim=c(-15, 30))+ scale_y_continuous(expand = c(0, 0))
g <- g +  theme(legend.justification=c(1,0), legend.position=c(.95,.75))+theme(legend.title=element_blank())+ theme(legend.key = element_rect(fill = "white"))
g <- g  + theme(axis.text.x = element_text(colour = "black"), axis.text.y = element_text(colour = "black"))
g <- g + theme(text = element_text(family = "Palatino"))
g
g <- ggplot(data=melted.df, aes(x=date, y=value, colour=variable, linetype = variable, shape = factor(variable))) + geom_line()
g <- g + scale_color_manual(values=c("blue", "red", "black", "blue", "magenta", "indianred3", "lightgoldenrod3", "gray60"))
g <- g + scale_linetype_manual(values = c( "solid", "longdash","twodash", "dotted", "dotdash"))
g <- g + ggtitle("") + ylab("In %") + xlab("")
g <- g + theme(axis.line = element_line(colour = "black"))+ theme(panel.background = element_blank())+theme(panel.border = element_rect(linetype = "solid", colour = "black", fill = NA))
g <- g + scale_x_date(limits = c(as.Date("1800-01-01"), as.Date("1899-01-01")), expand = c(0, 0))
g <- g + coord_cartesian(ylim=c(-15, 30))+ scale_y_continuous(expand = c(0, 0))
g <- g +  theme(legend.justification=c(1,0), legend.position=c(.95,.75))+theme(legend.title=element_blank())+ theme(legend.key = element_rect(fill = "white"))
g <- g  + theme(axis.text.x = element_text(colour = "black"), axis.text.y = element_text(colour = "black"))
g <- g + theme(text = element_text(family = "Palatino"))
g
ggsave("./Results/Fig_B3.pdf", width = 14, height = 12, units="cm")
SHARE <- ts_pcy(xts(Data$SHARE, order.by=Date))
M2 <- ts_pcy(xts(Data$M2, order.by=Date))
M3 <- ts_pcy(xts(Data$M3, order.by=Date))
mean(ts_span(M2, "1800-01-01", "1899-01-01"), na.rm =TRUE)
FiltGDP <- hpfilter(log(Data$RGDP[!is.na(Data$RGDP)]), freq = 100, type=c("lambda"))
FiltIP <- hpfilter(log(Data$IPROD[!is.na(Data$IPROD)]),freq = 100, type=c("lambda"))
GAPIP <- xts(FiltIP$cycle*100, order.by = Date[!is.na(Data$IPROD)])
GAPGDP <- xts(FiltGDP$cycle*100, order.by = Date[!is.na(Data$RGDP)])
# Export historical data for use in Stata
DataExport <- ts_c(xts(year(Date), order.by=(Date)), PROXa, RGDP, RGDPPROXY, RGDPCPI, GDPD, RGDPPC, GAPIP, GAPGDP, CPIA, CPIF, BANK,
IPROD, IPFood, IPTextiles, IPLeather, IPChemicals, IPMachinery, IPWood, IPMetals, SHARE, M2, M3)
colnames(DataExport) <- c("date", "proxy", "rgdp", "rgdpprox", "rgdpcpi", "gdpd", "rgdppc", "gapip", "gap", "cpi", "cpif", "bank", "iprod", "ipfood",
"iptex", "ipleat", "ipchem", "ipmach", "ipwood", "ipmet", "share", "m2", "m3")
write.xlsx(DataExport, "./Data/DataForStataUS.xlsx", sheetName="Sheet1")
source('C:/Users/daenu/switchdrive/Research/TrendInflation/submissions/JAE/HistoricalInflation_Replication/2_RomerizeBLSData.R')
source('C:/Users/daenu/switchdrive/Research/TrendInflation/submissions/JAE/HistoricalInflation_Replication/3_ConstructStataData.R')
source('C:/Users/daenu/switchdrive/Research/TrendInflation/submissions/JAE/HistoricalInflation_Replication/3_ConstructStataData.R')
source('C:/Users/daenu/switchdrive/Research/TrendInflation/submissions/JAE/HistoricalInflation_Replication/3_ConstructStataData.R')
source('C:/Users/daenu/switchdrive/Research/TrendInflation/submissions/JAE/HistoricalInflation_Replication/2_RomerizeBLSData.R')
PROXa
source('C:/Users/daenu/switchdrive/Research/TrendInflation/submissions/JAE/HistoricalInflation_Replication/2_RomerizeBLSData.R')
source('C:/Users/daenu/switchdrive/Research/TrendInflation/submissions/JAE/HistoricalInflation_Replication/2_RomerizeBLSData.R')
write.table(xTable, "./Results/Tab_1.txt")
source('C:/Users/daenu/switchdrive/Research/TrendInflation/submissions/JAE/HistoricalInflation_Replication/2_RomerizeBLSData.R')
stargazer(as.data.frame(ErrorDesc), summary.stat = c("mean", "sd", "min", "max"), digits =2, file = "./Results/Tab_B4.txt")
? stargazer
stargazer(as.data.frame(ErrorDesc), summary.stat = c("mean", "sd", "min", "max"), digits =2, out = "./Results/Tab_B4.txt")
stargazer(CPIx, CPIz, corxz, corzx, title="Properties of replication and measurement errors", type = "text", out = "./Results/Tab_B5.txt",
se=list(CPIx.se, CPIz.se, corxz.se, corzx.se),
dep.var.labels = c("Replication", "Proxy", "CPI-replication", "CPI-proxy"),
covariate.labels = c("CPI", "CPI-proxy", "CPI-replication",  "CPI-proxy (t-1)", "CPI-replication (t-1)", "Constant"),
omit.stat = c("f", "ll", "sigma2", "ser", "adj.rsq"), label="tab:measerr",
table.layout ="-d-t-s-n",
model.numbers          = FALSE,
font.size = "small",
digits =2,
notes        = "", style = "qje")
source('C:/Users/daenu/switchdrive/Research/TrendInflation/submissions/JAE/HistoricalInflation_Replication/2_RomerizeBLSData.R')
source('C:/Users/daenu/switchdrive/Research/TrendInflation/submissions/JAE/HistoricalInflation_Replication/3_ConstructStataData.R')
Data <- read.csv("./Data/RawDataAustria.csv", skip = 1)
Data <- read.csv("./Data/RawDataHungary.csv", skip = 1)
read
Data <- read.csv("./Data/RawDataArgentina.csv", skip = 1)
Data <- read.csv("./Data/RawDataSwitzerland.csv", skip = 1)
Data <- read.csv("./Data/RawDataNorway.csv", skip = 1)
Data <- read.csv("./Data/RawDataNorway.csv", skip = 1)
Data <- read.csv("./Data/RawDataNorway.csv", skip = 1)
Date <- as.Date(paste(Data$Year, "-01-01", sep = ""))
# Calculate proxy
Pfish <- xts(Data$Pfish, order.by = Date)
Pmilk <- xts(Data$Pmilk, order.by = Date)
Pmeat <- xts(Data$Pmeat, order.by = Date)
Pcrop <- xts(Data$Pcrop, order.by = Date)
Pveget <- xts(Data$Pveget, order.by = Date)
Pcolonial <- xts(Data$Pcolonial, order.by = Date)
Pbever <- xts(Data$Pbever, order.by = Date)
Pwood <- xts(Data$Pwood, order.by = Date)
Poil <- xts(Data$Poil, order.by = Date)
Pclothing <- xts(Data$Pclothing, order.by = Date)
Wfish <- Data$Wfish[1]
Wfish
Data$Wmeat
Data$Wmeat
Data$Pheating
Data <- read.csv("./Data/RawDataNorway.csv", skip = 1)
Data <- read.csv("./Data/RawDataNorway.csv", skip = 1)
Data <- read.csv("./Data/RawDataNorway.csv", skip = 1)
Date <- as.Date(paste(Data$Year, "-01-01", sep = ""))
Data <- read.csv("./Data/RawDataNorway.csv", skip = 1)
Data$Wfish
Data <- read.csv("./Data/RawDataFinland.csv", skip = 1)
Data <- read.csv("./Data/RawDataChile.csv", skip = 1)
Data <- read.csv("./Data/RawDataPortugal.csv", skip = 1)
Data <- read.csv("./Data/RawDataPortugal.csv", skip = 1)
Data <- read.csv("./Data/RawDataPortugal.csv", skip = 1)
Data <- read.csv("./Data/RawDataPortugal.csv", skip = 1)
Date <- as.Date(paste(Data$Year, "-01-01", sep = ""))
Data <- read.csv("./Data/RawDataPortugal.csv", skip = 1)
Data <- read.csv("./Data/RawDataPortugal.csv", skip = 1)
Date <- as.Date(paste(Data$Year, "-01-01", sep = ""))
Data <- read.csv("./Data/RawDataPortugal.csv", skip = 1)
Data <- read.csv("./Data/RawDataPortugal.csv", skip = 1)
Data$Year
Data <- read.csv("./Data/RawDataSpain.csv", skip = 1)
Data <- read.csv("./Data/RawDataUK.csv", skip = 1)
Data <- read.csv("./Data/RawDataSweden.csv", skip = 1)
source('C:/Users/daenu/switchdrive/Research/TrendInflation/submissions/JAE/HistoricalInflation_Replication/3_ConstructStataData.R')
source('C:/Users/daenu/switchdrive/Research/TrendInflation/submissions/JAE/HistoricalInflation_Replication/2_RomerizeBLSData.R')
